name: Android upload

on:
  push:
    paths:
      - "version"
      - ".github/workflows/upload-android.yml"

env:
  RELEASE_KEY_STORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
  SERVICE_ACCOUNT_JSON: ${{ secrets.ANDROID_SERVICE_ACCOUNT_JSON }}
  DEBUG_KEY_STORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_DEBUG_BASE64 }}
  EXPORT_PRESET_CFG: ${{ secrets.GODOT_EXPORTS_PRESET_CFG }}
  WORKING_DIRECTORY: game

jobs:
  deploy:
    if: github.ref == 'refs/heads/prod'
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Create service-account.json
        run: echo $SERVICE_ACCOUNT_JSON > service-account.json

      - name: Create release keystore
        run: echo $RELEASE_KEY_STORE_BASE64 | base64 --decode > keystore.keystore

      - name: Create debug keystore
        run: echo $DEBUG_KEY_STORE_BASE64 | base64 --decode > debug.keystore

      - name: Set version number and version code
        run: |
          echo "VERSION_NAME=$(cat version | cut -f1 -d-)" >> $GITHUB_ENV
          echo "VERSION_CODE=$(cat version | cut -f2 -d-)" >> $GITHUB_ENV

      - name: Create and config export_presets.cfg
        run: |
          echo $EXPORT_PRESET_CFG > $WORKING_DIRECTORY/export_presets.cfg
          sed -i "s|KEYSTORE_PATH|$GITHUB_WORKSPACE/keystore.keystore|g" $WORKING_DIRECTORY/export_presets.cfg
          sed -i "s|VERSION_CODE|$VERSION_CODE|g" $WORKING_DIRECTORY/export_presets.cfg
          sed -i "s|VERSION_NAME|$VERSION_NAME|g" $WORKING_DIRECTORY/export_presets.cfg

      - name: Set up JDK 1.8
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 11

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Download and config Godot Engine headless linux server and templates
        run: |
          wget -q https://downloads.tuxfamily.org/godotengine/3.5.1/Godot_v3.5.1-stable_linux_headless.64.zip
          wget -q https://downloads.tuxfamily.org/godotengine/3.5.1/Godot_v3.5.1-stable_export_templates.tpz
          mkdir ~/.cache
          mkdir -p ~/.config/godot
          mkdir -p ~/.local/share/godot/templates/3.5.1.stable
          unzip Godot_v3.5.1-stable_linux_headless.64.zip
          mv Godot_v3.5.1-stable_linux_headless.64 /usr/local/bin/godot
          unzip Godot_v3.5.1-stable_export_templates.tpz
          mv templates/* ~/.local/share/godot/templates/3.5.1.stable
          rm -f Godot_v3.5.1-stable_linux_headless.64.zip Godot_v3.5.1-stable_export_templates.tpz
          godot -e -q
      - name: Set Android SDK path in Godot Editor settings
        env:
          SETTINGS: |
            export/android/android_sdk_path = "/usr/local/lib/android/sdk"
            export/android/shutdown_adb_on_exit = true
            export/android/force_system_user = false
        run: echo $SETTINGS >> ~/.config/godot/editor_settings-3.tres


      - name: Install Android build template          
        run: |
          mkdir -p $WORKING_DIRECTORY/android/plugins
          mkdir -p $WORKING_DIRECTORY/android/build
          touch $WORKING_DIRECTORY/android/build/.gdignore
          echo "3.5.1.stable" >> $WORKING_DIRECTORY/android/.build_version
          unzip ~/.local/share/godot/templates/3.5.1.stable/android_source.zip  -d $WORKING_DIRECTORY/android/build

      - name: Export
        run: godot --path $WORKING_DIRECTORY --export Android

      - name: Publish to Play Store
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: service-account.json
          packageName: com.simondalvai.futsalmanager
          releaseFiles: FutsalManager.aab
          track: 'internal'
          status: completed
